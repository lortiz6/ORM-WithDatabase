import "@apollo/client/utilities/globals";
export { ApolloCache } from "@apollo/client/cache/core/cache.js";
export type { Transaction } from "@apollo/client/cache/core/cache.js";
export { Cache } from "@apollo/client/cache/core/types/Cache.js";
export type { DataProxy } from "@apollo/client/cache/core/types/DataProxy.js";
export { MissingFieldError } from "@apollo/client/cache/core/types/common.js";
export type { MissingTree, Modifier, ModifierDetails, Modifiers, ReadFieldOptions } from "@apollo/client/cache/core/types/common.js";
export { EntityStore } from "@apollo/client/cache/inmemory/entityStore.js";
export { createFragmentRegistry } from "@apollo/client/cache/inmemory/fragmentRegistry.js";
export type { FragmentRegistryAPI } from "@apollo/client/cache/inmemory/fragmentRegistry.js";
export { defaultDataIdFromObject, fieldNameFromStoreName } from "@apollo/client/cache/inmemory/helpers.js";
export { InMemoryCache } from "@apollo/client/cache/inmemory/inMemoryCache.js";
export { Policies } from "@apollo/client/cache/inmemory/policies.js";
export type { FieldFunctionOptions, FieldMergeFunction, FieldPolicy, FieldReadFunction, PossibleTypesMap, TypePolicies, TypePolicy } from "@apollo/client/cache/inmemory/policies.js";
export { cacheSlot, makeVar } from "@apollo/client/cache/inmemory/reactiveVars.js";
export type { ReactiveVar } from "@apollo/client/cache/inmemory/reactiveVars.js";
export * from "@apollo/client/cache/inmemory/types.js";
export { canonicalStringify, isReference, makeReference } from "@apollo/client/utilities";
export type { Reference } from "@apollo/client/utilities";
//# sourceMappingURL=index.d.ts.map