export { AutoCleanedStrongCache, AutoCleanedWeakCache, cacheSizes, defaultCacheSizes } from "@apollo/client/utilities/caching/index.js";
export type { CacheSizes } from "@apollo/client/utilities/caching/index.js";
export * from "@apollo/client/utilities/common/arrays.js";
export * from "@apollo/client/utilities/common/canUse.js";
export { canonicalStringify } from "@apollo/client/utilities/common/canonicalStringify.js";
export * from "@apollo/client/utilities/common/cloneDeep.js";
export * from "@apollo/client/utilities/common/compact.js";
export * from "@apollo/client/utilities/common/errorHandling.js";
export * from "@apollo/client/utilities/common/incrementalResult.js";
export * from "@apollo/client/utilities/common/makeUniqueId.js";
export * from "@apollo/client/utilities/common/maybeDeepFreeze.js";
export * from "@apollo/client/utilities/common/mergeDeep.js";
export * from "@apollo/client/utilities/common/mergeOptions.js";
export * from "@apollo/client/utilities/common/objects.js";
export { omitDeep } from "@apollo/client/utilities/common/omitDeep.js";
export * from "@apollo/client/utilities/common/stringifyForDisplay.js";
export { stripTypename } from "@apollo/client/utilities/common/stripTypename.js";
export { DEV, maybe } from "@apollo/client/utilities/globals";
export { DocumentTransform } from "@apollo/client/utilities/graphql/DocumentTransform.js";
export type { DocumentTransformCacheKey } from "@apollo/client/utilities/graphql/DocumentTransform.js";
export { getDirectiveNames, getInclusionDirectives, hasAllDirectives, hasAnyDirectives, hasClientExports, hasDirectives, shouldInclude } from "@apollo/client/utilities/graphql/directives.js";
export type { DirectiveInfo, InclusionDirectives } from "@apollo/client/utilities/graphql/directives.js";
export { createFragmentMap, getFragmentFromSelection, getFragmentQueryDocument } from "@apollo/client/utilities/graphql/fragments.js";
export type { FragmentMap, FragmentMapFunction } from "@apollo/client/utilities/graphql/fragments.js";
export { checkDocument, getDefaultValues, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, getOperationDefinition, getOperationName, getQueryDefinition } from "@apollo/client/utilities/graphql/getFromAST.js";
export { isMutationOperation, isQueryOperation, isSubscriptionOperation } from "@apollo/client/utilities/graphql/operations.js";
export { print } from "@apollo/client/utilities/graphql/print.js";
export { argumentsObjectFromField, getStoreKeyName, getTypenameFromResult, isDocumentNode, isField, isInlineFragment, isReference, makeReference, resultKeyNameFromField, storeKeyNameFromField, valueToObjectRepresentation } from "@apollo/client/utilities/graphql/storeUtils.js";
export type { AsStoreObject, Directives, Reference, StoreObject, StoreValue, VariableValue } from "@apollo/client/utilities/graphql/storeUtils.js";
export { addTypenameToDocument, buildQueryFromSelectionSet, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument } from "@apollo/client/utilities/graphql/transform.js";
export type { GetDirectiveConfig, GetFragmentSpreadConfig, GetNodeConfig, RemoveArgumentsConfig, RemoveDirectiveConfig, RemoveFragmentDefinitionConfig, RemoveFragmentSpreadConfig, RemoveNodeConfig, RemoveVariableDefinitionConfig } from "@apollo/client/utilities/graphql/transform.js";
export * from "@apollo/client/utilities/observables/Concast.js";
export { Observable } from "@apollo/client/utilities/observables/Observable.js";
export type { ObservableSubscription, Observer } from "@apollo/client/utilities/observables/Observable.js";
export * from "@apollo/client/utilities/observables/asyncMap.js";
export * from "@apollo/client/utilities/observables/iteration.js";
export * from "@apollo/client/utilities/observables/subclassing.js";
export { concatPagination, offsetLimitPagination, relayStylePagination } from "@apollo/client/utilities/policies/pagination.js";
export { createFulfilledPromise, createRejectedPromise, isStatefulPromise, wrapPromiseWithState } from "@apollo/client/utilities/promises/decoration.js";
export type { PromiseWithState } from "@apollo/client/utilities/promises/decoration.js";
export type { DeepOmit } from "@apollo/client/utilities/types/DeepOmit.js";
export type { DeepPartial } from "@apollo/client/utilities/types/DeepPartial.js";
export * from "@apollo/client/utilities/types/IsStrictlyAny.js";
export type { OnlyRequiredProperties } from "@apollo/client/utilities/types/OnlyRequiredProperties.js";
//# sourceMappingURL=index.d.ts.map